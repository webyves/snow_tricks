# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'fr'

    directory.trick.images: '%kernel.project_dir%/public/uploads/trick_images'
    directory.user.avatar: '%kernel.project_dir%/public/uploads/avatar'

    captcha.sitekey: "%env(CAPTCHA_SITE_KEY)%"
    captcha.secretkey: "%env(CAPTCHA_SECRET_KEY)%"

    admin.email: "%env(ADMIN_CONTACT_EMAIL)%"
    
    perpage.comments: "%env(COMMENTS_PER_PAGE)%"
    perpage.tricks: "%env(TRICKS_PER_PAGE)%"
    perpage.images: "%env(IMAGES_PER_PAGE)%"
    perpage.videos: "%env(VIDEOS_PER_PAGE)%"

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # Specific snow_tricks application services

    App\Service\FileUploader:
        arguments:
            $directories: {userAvatar: '%directory.user.avatar%', trickImages: '%directory.trick.images%'}

    App\EventListener\UploadListener:
        tags:
            - { name: doctrine.event_listener, event: prePersist }
            - { name: doctrine.event_listener, event: postRemove }

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
